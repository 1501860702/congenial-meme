<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>look chat</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            background-color: #000;
            color: #fff;
            font-family: Arial, sans-serif;
            direction: rtl;
        }

        .center-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
        }

        h1 {
            color: #FFD700; /* لون ذهبي */
            margin-bottom: 20px;
        }

        .button {
            background-color: #FFD700; /* لون ذهبي */
            border: none;
            padding: 15px 30px;
            font-size: 18px;
            cursor: pointer;
            border-radius: 5px;
            color: #001137; /* نفس لون الخلفية */
        }

        .button:hover {
            background-color: #FFC700; /* لون ذهبي أفتح */
        }

        /* CSS للدردشة */
        .chat-container {
            display: none;
            flex-direction: column;
            height: 100vh;
            overflow: hidden;
        }

        .chat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #5555;
            padding: 10px;
        }

        .chat-header i {
            font-size: 20px;
            cursor: pointer;
        }

        .chat-messages {
            flex-grow: 1;
            overflow-y: auto;
            padding: 20px;
            background-color: #000;
        }

        .chat-input {
            display: flex;
            align-items: center;
            background-color: #000;
            padding: 10px;
        }

        .chat-input input[type="text"] {
            flex-grow: 1;
            background-color: #5555;
            border: none;
            padding: 10px;
            color: #fff;
            border-radius: 20px;
            margin-right: 10px;
        }

        .chat-input input[type="file"] {
            display: none;
        }

        .chat-input label {
            cursor: pointer;
            color: #fff;
            margin: 0 10px;
        }

        .chat-input button {
            background-color: #0000;
            border: none;
            padding: 10px;
            color: #fff;
            border-radius: 50%;
            cursor: pointer;
            margin: 0 5px;
        }

        img.thumbnail {
            width: 50px;
            height: 50px;
            object-fit: cover;
            cursor: pointer;
            border-radius: 5px;
        }

        img.fullsize {
            width: 100%;
            height: auto;
            display: none;
        }

        .sent-message {
            align-self: flex-start;
            background-color: transparent;
            border: 1px solid #FFD700;
            color: #FFD700;
            border-radius: 10px;
            padding: 10px;
            margin-bottom: 10px;
            max-width: 70%;
            word-wrap: break-word;
            box-shadow: 0px 0px 10px #FFD700;
        }

        .received-message {
            align-self: flex-end;
            background-color: transparent;
            border: 1px solid #006400;
            color: #006400;
            border-radius: 10px;
            padding: 10px;
            margin-bottom: 10px;
            max-width: 70%;
            word-wrap: break-word;
            box-shadow: 0px 0px 10px #006400;
        }

        .sidebar {
            height: 100%;
            width: 0;
            position: fixed;
            z-index: 1;
            top: 0;
            right: 0;
            background-color: #000;
            overflow-x: hidden;
            transition: 0.3s;
            padding-top: 60px;
        }

        .sidebar a {
            padding: 8px 8px 8px 32px;
            text-decoration: none;
            font-size: 25px;
            color: #818181;
            display: flex;
            align-items: center;
            transition: 0.3s;
        }

        .sidebar a:hover {
            color: #f1f1f1;
        }

        .sidebar .closebtn {
            position: absolute;
            top: 0;
            right: 25px;
            font-size: 36px;
        }

        .sidebar i {
            margin-left: 10px;
            font-size: 25px;
        }
    </style>
</head>
<body>
    <div class="center-container" id="welcomeScreen">
        <h1>اهلآ بڪ فChaT</h1>
        <button class="button" onclick="openChat()">سجل الدخول</button>
    </div>

    <div class="chat-container" id="chatContainer">
        <div class="chat-header">
            <i class="fas fa-bars" onclick="openSidebar()"></i>
            <i class="fas fa-ellipsis-v" onclick="showDeleteButton()"></i>
        </div>
        <div class="chat-messages" id="chatMessages">
            <!-- Messages will appear here -->
        </div>
        <div class="chat-input">
            <input type="file" id="fileInput">
            <label for="fileInput"><i class="fas fa-image"></i></label>
            <input type="text" id="textInput" placeholder="اكتب رسالتك...">
            <button id="sendButton"><i class="fas fa-paper-plane"></i></button>
            <button id="voiceButton"><i class="fas fa-microphone"></i></button>
        </div>
    </div>

    <!-- الشريط الجانبي -->
    <div id="mySidebar" class="sidebar">
        <a href="javascript:void(0)" class="closebtn" onclick="closeSidebar()">&times;</a>
    </div>

    <script>
        const ws = new WebSocket('ws://localhost:8080');

        const sendButton = document.getElementById('sendButton');
        const textInput = document.getElementById('textInput');
        const chatMessages = document.getElementById('chatMessages');
        const fileInput = document.getElementById('fileInput');
        const voiceButton = document.getElementById('voiceButton');
        
        let mediaRecorder;
        let audioChunks = [];

        ws.onmessage = function(event) {
            const data = JSON.parse(event.data);
            if (data.type === 'text') {
                appendMessage(data.message, 'received');
            } else if (data.type === 'image') {
                appendImageMessage(data.imageSrc);
            } else if (data.type === 'voice') {
                appendVoiceMessage(data.audioUrl);
            }
        };

        sendButton.addEventListener('click', () => {
            const message = textInput.value;
            if (message.trim() !== '') {
                ws.send(JSON.stringify({ type: 'text', message: message }));
                appendMessage(message, 'sent');
                textInput.value = '';
            }
        });

        fileInput.addEventListener('change', () => {
            const file = fileInput.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const imageSrc = e.target.result;
                    ws.send(JSON.stringify({ type: 'image', imageSrc: imageSrc }));
                    appendImageMessage(imageSrc);
                }
                reader.readAsDataURL(file);
            }
        });

        voiceButton.addEventListener('mousedown', () => {
            startRecording();
        });

        voiceButton.addEventListener('mouseup', () => {
            stopRecording();
        });

        function startRecording() {
            navigator.mediaDevices.getUserMedia({ audio: true })
                .then(stream => {
                    mediaRecorder = new MediaRecorder(stream);
                    mediaRecorder.start();

                    mediaRecorder.addEventListener("dataavailable", event => {
                        audioChunks.push(event.data);
                    });

                    mediaRecorder.addEventListener("stop", () => {
                        const audioBlob = new Blob(audioChunks, { type: 'audio/mp3' });
                        const audioUrl = URL.createObjectURL(audioBlob);
                        ws.send(JSON.stringify({ type: 'voice', audioUrl: audioUrl }));
                        appendVoiceMessage(audioUrl);
                        audioChunks = [];
                    });
                });
        }

        function stopRecording() {
            mediaRecorder.stop();
        }

        function appendMessage(message, type) {
            const messageElement = document.createElement('div');
            messageElement.textContent = message;
            messageElement.className = type === 'sent' ? 'sent-message' : 'received-message';
            chatMessages.appendChild(messageElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function appendImageMessage(imageSrc) {
            const thumbnail = document.createElement('img');
            thumbnail.src = imageSrc;
            thumbnail.className = 'thumbnail';
            thumbnail.addEventListener('click', function() {
                const fullsize = document.createElement('img');
                fullsize.src = imageSrc;
                fullsize.className = 'fullsize';
                fullsize.style.display = 'block';
                fullsize.addEventListener('click', function() {
                    fullsize.style.display = 'none';
                });
                chatMessages.appendChild(fullsize);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            });
            chatMessages.appendChild(thumbnail);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function appendVoiceMessage(audioUrl) {
            const audioElement = document.createElement('audio');
            audioElement.controls = true;
            audioElement.src = audioUrl;
            chatMessages.appendChild(audioElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function openChat() {
            document.getElementById('welcomeScreen').style.display = 'none';
            document.getElementById('chatContainer').style.display = 'flex';
        }

        function openSidebar() {
            document.getElementById('mySidebar').style.width = '250px';
        }

        function closeSidebar() {
            document.getElementById('mySidebar').style.width = '0';
        }
    </script>
</body>
</html>
